{
  "version": 3,
  "sources": ["../src/clean-keyboard.tsx", "swift:/Users/runner/work/extensions/extensions/extensions/clean-keyboard/swift/MyExecutable"],
  "sourcesContent": ["import { ActionPanel, Icon, List, Toast, Action } from \"@raycast/api\";\nimport { useEffect, useState } from \"react\";\nimport { handler } from \"swift:../swift/MyExecutable\";\n\ninterface Duration {\n  display: string;\n  seconds: number;\n  icon: string;\n}\n\nconst durations: Duration[] = [\n  {\n    display: \"15 seconds\",\n    seconds: 15,\n    icon: \"\uD83E\uDEA5\",\n  },\n  {\n    display: \"30 seconds\",\n    seconds: 30,\n    icon: \"\uD83E\uDDFD\",\n  },\n  {\n    display: \"1 minute\",\n    seconds: 60,\n    icon: \"\uD83E\uDDFC\",\n  },\n  {\n    display: \"2 minutes\",\n    seconds: 120,\n    icon: \"\uD83D\uDEBF\",\n  },\n  {\n    display: \"5 minutes\",\n    seconds: 300,\n    icon: \"\uD83D\uDEC1\",\n  },\n  {\n    display: \"1 hour\",\n    seconds: 3600,\n    icon: \"\uD83E\uDDF9\",\n  },\n  {\n    display: \"24 hours\",\n    seconds: 86400,\n    icon: \"\uD83E\uDEE7\",\n  },\n  {\n    display: \"Forever\",\n    seconds: Infinity,\n    icon: \"\uD83E\uDD2F\",\n  },\n];\n\nexport default function Command() {\n  const [isRunning, setIsRunning] = useState(false);\n  const [timeLeft, setTimeLeft] = useState<number | null>(null);\n  const [icon, setIcon] = useState<string | null>(null);\n\n  const selectDuration = (duration: Duration) => {\n    const lockToast = new Toast({ title: \"Keyboard Locked\" });\n    handler(duration.seconds);\n    setTimeLeft(duration.seconds);\n    setIcon(duration.icon);\n    setIsRunning(true);\n    lockToast.show();\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (isRunning && timeLeft) {\n        setTimeLeft(timeLeft - 1);\n        if (timeLeft - 1 === 0) {\n          setIsRunning(false);\n        }\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [isRunning, timeLeft]);\n\n  if (isRunning) {\n    return (\n      <List>\n        <List.EmptyView\n          icon={icon ?? \"\uD83E\uDDFC\"}\n          description=\"Press \u2303 + U at any time to unlock keyboard.\"\n          title={`Cleaning keyboard${timeLeft ? ` for ${timeLeft} seconds ` : \"\"}`}\n          actions={\n            <ActionPanel>\n              <Action title={\"Back\"} onAction={() => setIsRunning(false)} />\n              <Action\n                autoFocus={false}\n                title={\"Unlock Keyboard\"}\n                shortcut={{ modifiers: [\"ctrl\"], key: \"u\" }}\n                onAction={() => setIsRunning(false)}\n              />\n            </ActionPanel>\n          }\n        />\n      </List>\n    );\n  }\n  return (\n    <List filtering={false} navigationTitle=\"Lock keyboard for..\">\n      <List.Section title=\"Durations\">\n        {durations.map((duration) => (\n          <List.Item\n            key={duration.display + duration.seconds}\n            title={`Lock Keyboard for ${duration.display}`}\n            icon={duration.icon}\n            actions={\n              <ActionPanel>\n                <Action title=\"Lock Keyboard\" icon={Icon.Lock} onAction={() => selectDuration(duration)} />\n              </ActionPanel>\n            }\n          />\n        ))}\n      </List.Section>\n    </List>\n  );\n}\n", "\nimport { environment } from \"@raycast/api\";\nimport { join } from \"path\";\nimport { chmod } from \"fs/promises\";\nimport { spawn } from \"child_process\";\n\nasync function runSwiftFunction(command, ...args) {\n  const swiftPath = join(environment.assetsPath, \"compiled_raycast_swift/MyExecutable\");\n  await chmod(swiftPath, \"755\");\n\n  return new Promise((resolve, reject) => {\n    const commandArgs = [command];\n    for (const arg of args) {\n      try {\n        commandArgs.push(JSON.stringify(arg, (k, v) => v === undefined ? null : v));\n      } catch (err) {\n        reject(new SwiftError(\"Failed to serialize input to JSON: \" + err.message));\n        return;\n      }\n    }\n    const child = spawn(swiftPath, commandArgs);\n    const stdout = [];\n    const stderr = [];\n\n    child.stdout?.on(\"data\", (data) => {\n      stdout.push(data.toString());\n    });\n    child.stderr?.on(\"data\", (data) => {\n      stderr.push(data.toString());\n    });\n\n    child.on(\"exit\", (code) => {\n      if (code === 0) {\n        try {\n          const result = stdout.join(\"\").trim();\n          if (result.length != 0) {\n            resolve(JSON.parse(result));\n          } else {\n            resolve(null);\n          }\n        } catch (err) {\n          const error = new SwiftError(\"Failed to deserialize result from JSON: \" + err.message);\n          error.stdout = stdout.join(\"\").trim();\n          error.stderr = stderr.join(\"\").trim();\n          reject(error);\n        }\n      } else {\n        const error = new SwiftError(stderr.join(\"\").trim() || stdout.join(\"\").trim() || \"Could not get any data\");\n        error.stdout = stdout.join(\"\").trim();\n        error.stderr = stderr.join(\"\").trim();\n        reject(error);\n      }\n    });\n\n    child.on(\"error\", (error) => {\n      reject(error);\n    });\n  });\n}\n\nexport async function handler(duration) {\n  return await runSwiftFunction(\"handler\", duration)\n}\n\nexport class SwiftError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"SwiftError\";\n  }\n}\n"],
  "mappings": "yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GAAA,IAAAI,EAAuD,wBACvDC,EAAoC,iBCApC,IAAAC,EAA4B,wBAC5BC,EAAqB,gBACrBC,EAAsB,uBACtBC,EAAsB,yBAEtB,eAAeC,EAAiBC,KAAYC,EAAM,CAChD,IAAMC,KAAY,QAAK,cAAY,WAAY,qCAAqC,EACpF,eAAM,SAAMA,EAAW,KAAK,EAErB,IAAI,QAAQ,CAACC,EAASC,IAAW,CACtC,IAAMC,EAAc,CAACL,CAAO,EAC5B,QAAWM,KAAOL,EAChB,GAAI,CACFI,EAAY,KAAK,KAAK,UAAUC,EAAK,CAACC,EAAGC,IAAMA,IAAM,OAAY,KAAOA,CAAC,CAAC,CAC5E,OAASC,EAAK,CACZL,EAAO,IAAIM,EAAW,sCAAwCD,EAAI,OAAO,CAAC,EAC1E,MACF,CAEF,IAAME,KAAQ,SAAMT,EAAWG,CAAW,EACpCO,EAAS,CAAC,EACVC,EAAS,CAAC,EAEhBF,EAAM,QAAQ,GAAG,OAASG,GAAS,CACjCF,EAAO,KAAKE,EAAK,SAAS,CAAC,CAC7B,CAAC,EACDH,EAAM,QAAQ,GAAG,OAASG,GAAS,CACjCD,EAAO,KAAKC,EAAK,SAAS,CAAC,CAC7B,CAAC,EAEDH,EAAM,GAAG,OAASI,GAAS,CACzB,GAAIA,IAAS,EACX,GAAI,CACF,IAAMC,EAASJ,EAAO,KAAK,EAAE,EAAE,KAAK,EAChCI,EAAO,QAAU,EACnBb,EAAQ,KAAK,MAAMa,CAAM,CAAC,EAE1Bb,EAAQ,IAAI,CAEhB,OAASM,EAAK,CACZ,IAAMQ,EAAQ,IAAIP,EAAW,2CAA6CD,EAAI,OAAO,EACrFQ,EAAM,OAASL,EAAO,KAAK,EAAE,EAAE,KAAK,EACpCK,EAAM,OAASJ,EAAO,KAAK,EAAE,EAAE,KAAK,EACpCT,EAAOa,CAAK,CACd,KACK,CACL,IAAMA,EAAQ,IAAIP,EAAWG,EAAO,KAAK,EAAE,EAAE,KAAK,GAAKD,EAAO,KAAK,EAAE,EAAE,KAAK,GAAK,wBAAwB,EACzGK,EAAM,OAASL,EAAO,KAAK,EAAE,EAAE,KAAK,EACpCK,EAAM,OAASJ,EAAO,KAAK,EAAE,EAAE,KAAK,EACpCT,EAAOa,CAAK,CACd,CACF,CAAC,EAEDN,EAAM,GAAG,QAAUM,GAAU,CAC3Bb,EAAOa,CAAK,CACd,CAAC,CACH,CAAC,CACH,CAEA,eAAsBC,EAAQC,EAAU,CACtC,OAAO,MAAMpB,EAAiB,UAAWoB,CAAQ,CACnD,CAEO,IAAMT,EAAN,cAAyB,KAAM,CACpC,YAAYU,EAAS,CACnB,MAAMA,CAAO,EACb,KAAK,KAAO,YACd,CACF,EDkBY,IAAAC,EAAA,6BA7ENC,EAAwB,CAC5B,CACE,QAAS,aACT,QAAS,GACT,KAAM,WACR,EACA,CACE,QAAS,aACT,QAAS,GACT,KAAM,WACR,EACA,CACE,QAAS,WACT,QAAS,GACT,KAAM,WACR,EACA,CACE,QAAS,YACT,QAAS,IACT,KAAM,WACR,EACA,CACE,QAAS,YACT,QAAS,IACT,KAAM,WACR,EACA,CACE,QAAS,SACT,QAAS,KACT,KAAM,WACR,EACA,CACE,QAAS,WACT,QAAS,MACT,KAAM,WACR,EACA,CACE,QAAS,UACT,QAAS,IACT,KAAM,WACR,CACF,EAEe,SAARC,GAA2B,CAChC,GAAM,CAACC,EAAWC,CAAY,KAAI,YAAS,EAAK,EAC1C,CAACC,EAAUC,CAAW,KAAI,YAAwB,IAAI,EACtD,CAACC,EAAMC,CAAO,KAAI,YAAwB,IAAI,EAE9CC,EAAkBC,GAAuB,CAC7C,IAAMC,EAAY,IAAI,QAAM,CAAE,MAAO,iBAAkB,CAAC,EACxDC,EAAQF,EAAS,OAAO,EACxBJ,EAAYI,EAAS,OAAO,EAC5BF,EAAQE,EAAS,IAAI,EACrBN,EAAa,EAAI,EACjBO,EAAU,KAAK,CACjB,EAcA,SAZA,aAAU,IAAM,CACd,IAAME,EAAW,YAAY,IAAM,CAC7BV,GAAaE,IACfC,EAAYD,EAAW,CAAC,EACpBA,EAAW,IAAM,GACnBD,EAAa,EAAK,EAGxB,EAAG,GAAI,EACP,MAAO,IAAM,cAAcS,CAAQ,CACrC,EAAG,CAACV,EAAWE,CAAQ,CAAC,EAEpBF,KAEA,OAAC,QACC,mBAAC,OAAK,UAAL,CACC,KAAMI,GAAQ,YACd,YAAY,mDACZ,MAAO,oBAAoBF,EAAW,QAAQA,CAAQ,YAAc,EAAE,GACtE,WACE,QAAC,eACC,oBAAC,UAAO,MAAO,OAAQ,SAAU,IAAMD,EAAa,EAAK,EAAG,KAC5D,OAAC,UACC,UAAW,GACX,MAAO,kBACP,SAAU,CAAE,UAAW,CAAC,MAAM,EAAG,IAAK,GAAI,EAC1C,SAAU,IAAMA,EAAa,EAAK,EACpC,GACF,EAEJ,EACF,KAIF,OAAC,QAAK,UAAW,GAAO,gBAAgB,sBACtC,mBAAC,OAAK,QAAL,CAAa,MAAM,YACjB,SAAAH,EAAU,IAAKS,MACd,OAAC,OAAK,KAAL,CAEC,MAAO,qBAAqBA,EAAS,OAAO,GAC5C,KAAMA,EAAS,KACf,WACE,OAAC,eACC,mBAAC,UAAO,MAAM,gBAAgB,KAAM,OAAK,KAAM,SAAU,IAAMD,EAAeC,CAAQ,EAAG,EAC3F,GANGA,EAAS,QAAUA,EAAS,OAQnC,CACD,EACH,EACF,CAEJ",
  "names": ["clean_keyboard_exports", "__export", "Command", "__toCommonJS", "import_api", "import_react", "import_api", "import_path", "import_promises", "import_child_process", "runSwiftFunction", "command", "args", "swiftPath", "resolve", "reject", "commandArgs", "arg", "k", "v", "err", "SwiftError", "child", "stdout", "stderr", "data", "code", "result", "error", "handler", "duration", "message", "import_jsx_runtime", "durations", "Command", "isRunning", "setIsRunning", "timeLeft", "setTimeLeft", "icon", "setIcon", "selectDuration", "duration", "lockToast", "handler", "interval"]
}
